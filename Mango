local a=string.char;local b=string.byte;local c=string.sub;local d=bit32 or bit;local e=d.bxor;local f=table.concat;local g=table.insert;local function h(i,j)local k={}for l=1,#i do g(k,a(e(b(c(i,l,l+1)),b(c(j,1+l%#j,1+l%#j+1)))%256))end;return f(k)end;local m=tonumber;local n=string.byte;local o=string.char;local p=string.sub;local q=string.gsub;local r=string.rep;local s=table.concat;local t=table.insert;local u=math.ldexp;local v=getfenv or function()return _ENV end;local w=setmetatable;local x=pcall;local y=select;local z=unpack or table.unpack;local A=tonumber;local function B(C,D,...)local E=1;local F;C=q(p(C,15-10),h("\16\121","\164\62\87\59\191\73\224"),function(G)if n(G,2)==79 then F=m(p(G,2-1,1-0))return""else local H=o(m(G,16))if F then local I=0;local J;while true do if 0==I then J=r(H,F)F=nil;I=1 end;if I==1 then return J end end else return H end end end)local function K(L,M,N)if N then local O=0;local P;while true do if 0==O then P=L/(4-2)^(M-1)%2^(N-1-(M-(620-(555+64)))+1)return P-P%(932-(857+74))end end else local Q=0;local R;while true do if Q==0 then R=2^(M-1)return L%(R+R)>=R and 1 or 0 end end end end;local function S()local T=0;local U;while true do if 1==T then return U end;if T==0 then U=n(C,E,E)E=E+569-(367+201)T=1 end end end;local function V()local W=0;local X;local Y;while true do if W==0 then X,Y=n(C,E,E+2)E=E+2;W=1 end;if W==1 then return Y*256+X end end end;local function Z()local _=0;local a0;local a1;local a2;local a3;while true do if _==1 then return a3*16777216+a2*(66463-(214+713))+a1*256+a0 end;if _==0 then a0,a1,a2,a3=n(C,E,E+3)E=E+4;_=1 end end end;local function a4()local a5=Z()local a6=Z()local a7=1;local a8=K(a6,1,20)*2^32+a5;local a9=K(a6,21,31)local aa=K(a6,9+23)==1 and-1 or 1;if a9==0 then if a8==0 then return aa*0 else a9=1;a7=0+0 end elseif a9==2047 then return a8==877-(282+595)and aa*(1638-(1523+114))/0 or aa*NaN end;return u(aa,a9-1023)*(a7+a8/2^52)end;local function ab(ac)local ad;if not ac then local ae=0;while true do if ae==0 then ac=Z()if ac==0 then return""end;break end end end;ad=p(C,E,E+ac-1)E=E+ac;local af={}for ag=1,#ad do af[ag]=o(n(p(ad,ag,ag)))end;return s(af)end;local ah=Z;local function ai(...)return{...},y("#",...)end;local function aj()local ak=0;local al;local am;local an;local ao;local ap;local aq;while true do if ak==2 then for ar=1,ap do local as=0;local at;local au;while true do if as==1 then if at==1 then au=S()~=0 elseif at==2 then au=a4()elseif at==3+0 then au=ab()end;aq[ar]=au;break end;if as==0 then at=S()au=nil;as=1 end end end;ao[3-0]=S()for av=1066-(68+997),Z()do local aw=S()if K(aw,1,1)==0 then local ax=K(aw,1272-(226+1044),3)local ay=K(aw,4,6)local az={V(),V(),nil,nil}if ax==0-0 then local aA=0;while true do if 0==aA then az[3]=V()az[121-(32+85)]=V()break end end elseif ax==1 then az[3]=Z()elseif ax==2 then az[3]=Z()-2^16 elseif ax==3 then local aB=0;while true do if aB==0 then az[3]=Z()-2^16;az[4+0]=V()break end end end;if K(ay,1,1)==1 then az[1+1]=aq[az[2]]end;if K(ay,2,2)==1 then az[3]=aq[az[3]]end;if K(ay,3,3)==958-(892+65)then az[4]=aq[az[9-5]]end;al[av]=az end end;ak=3 end;if ak==1 then ao={al,am,nil,an}ap=Z()aq={}ak=2 end;if 0==ak then al={}am={}an={}ak=1 end;if ak==3 then for aC=1,Z()do am[aC-1]=aj()end;return ao end end end;local function aD(aE,aF,aG)local aH=0;local aI;local aJ;local aK;while true do if aH==0 then aI=aE[1]aJ=aE[2]aH=1 end;if aH==1 then aK=aE[3]return function(...)local aL=aI;local aM=aJ;local aN=aK;local aO=ai;local aP=1;local aQ=-(1-0)local aR={}local aS={...}local aT=y("#",...)-1;local aU={}local aV={}for aW=0,aT do if aW>=aN then aR[aW-aN]=aS[aW+1]else aV[aW]=aS[aW+1]end end;local aX=aT-aN+1;local aY;local aZ;while true do local a_=0;while true do if a_==0 then aY=aL[aP]aZ=aY[1-0]a_=1 end;if a_==1 then if aZ<=45 then if aZ<=22 then if aZ<=360-(87+263)then if aZ<=184-(67+113)then if aZ<=1 then if aZ>0 then local b0=0;local b1;while true do if b0==0 then b1=aY[2]aV[b1](z(aV,b1+1,aQ))break end end else local b2=0;local b3;while true do if b2==0 then b3=aY[2]aV[b3](aV[b3+1])break end end end elseif aZ<=2+0 then if aV[aY[2]]then aP=aP+1 else aP=aY[7-4]end elseif aZ>3 then aV[aY[2]][aV[aY[3+0]]]=aV[aY[4]]else do return aV[aY[2]]()end end elseif aZ<=27-20 then if aZ<=5 then local b4=0;local b5;while true do if b4==0 then b5=aY[2]do return aV[b5](z(aV,b5+1,aY[3]))end;break end end elseif aZ==6 then aV[aY[2]]=aV[aY[3]][aY[4]]else local b6=aY[2]aV[b6](z(aV,b6+1,aY[3]))end elseif aZ<=8 then aV[aY[2]][aY[3]]=aV[aY[4]]elseif aZ>9 then if aV[aY[2]]then aP=aP+1 else aP=aY[3]end else aV[aY[2]]=#aV[aY[3]]end elseif aZ<=968-(802+150)then if aZ<=34-21 then if aZ<=11 then local b7=0;local b8;local b9;local ba;while true do if b7==2 then for bb=1,aY[4]do aP=aP+1;local bc=aL[aP]if bc[1]==51 then ba[bb-1]={aV,bc[3]}else ba[bb-1]={aF,bc[3]}end;aU[#aU+1]=ba end;aV[aY[2]]=aD(b8,b9,aG)break end;if b7==1 then ba={}b9=w({},{[h("\246\216\11\78\205\226\26","\32\169\135\98")]=function(bd,be)local bf=0;local bg;while true do if bf==0 then bg=ba[be]return bg[1][bg[2]]end end end,[h("\247\244\121\33\67\244\195\204\206\111","\173\168\171\23\68\52\157")]=function(bh,bi,bj)local bk=0;local bl;while true do if bk==0 then bl=ba[bi]bl[1][bl[2]]=bj;break end end end})b7=2 end;if b7==0 then b8=aM[aY[3]]b9=nil;b7=1 end end elseif aZ>12 then if aV[aY[2]]==aV[aY[4]]then aP=aP+1 else aP=aY[3]end else local bm=0;local bn;while true do if bm==0 then bn=aY[2]do return z(aV,bn,aQ)end;break end end end elseif aZ<=14 then aV[aY[2]]=aV[aY[3]]+aY[4]elseif aZ==15 then aV[aY[2]]=aV[aY[3]]else aV[aY[2]]=aY[3+0]end elseif aZ<=19 then if aZ<=1014-(915+82)then local bo=aM[aY[3]]local bp;local bq={}bp=w({},{[h("\184\203\120\251\219\130\236","\191\231\148\17\149")]=function(br,bs)local bt=bq[bs]return bt[2-1][bt[2]]end,[h("\18\215\241\133\176\206\245\33\40\240","\69\77\136\159\224\199\167\155")]=function(bu,bv,bw)local bx=0;local by;while true do if bx==0 then by=bq[bv]by[1][by[2+0]]=bw;break end end end})for bz=1,aY[4]do local bA=0;local bB;while true do if bA==0 then aP=aP+1-0;bB=aL[aP]bA=1 end;if bA==1 then if bB[1]==51 then bq[bz-1]={aV,bB[3]}else bq[bz-1]={aF,bB[1190-(1069+118)]}end;aU[#aU+1]=bq;break end end end;aV[aY[2]]=aD(bo,bp,aG)elseif aZ==18 then local bC=aY[4-2]local bD=aV[bC+2]local bE=aV[bC]+bD;aV[bC]=bE;if bD>0 then if bE<=aV[bC+1-0]then aP=aY[3]aV[bC+3]=bE end elseif bE>=aV[bC+1]then aP=aY[3]aV[bC+3]=bE end else local bF=aY[2]local bG=aY[4]local bH=bF+2;local bI={aV[bF](aV[bF+1],aV[bH])}for bJ=1,bG do aV[bH+bJ]=bI[bJ]end;local bK=bI[1+0]if bK then aV[bH]=bK;aP=aY[4-1]else aP=aP+1 end end elseif aZ<=20 then aV[aY[2]]={}elseif aZ==21 then aV[aY[2]]=aV[aY[3]]%aV[aY[4]]else aV[aY[2]]=aV[aY[3]]%aY[4+0]end elseif aZ<=33 then if aZ<=27 then if aZ<=24 then if aZ>23 then local bL=aY[2]aV[bL]=aV[bL](z(aV,bL+1,aY[794-(368+423)]))else aV[aY[2]][aV[aY[9-6]]]=aY[4]end elseif aZ<=25 then local bM=0;local bN;while true do if bM==0 then bN=aY[2]aV[bN]=aV[bN](z(aV,bN+1,aQ))break end end elseif aZ>26 then aV[aY[2]]=aF[aY[3]]elseif aV[aY[20-(10+8)]]==aY[4]then aP=aP+3-2 else aP=aY[3]end elseif aZ<=30 then if aZ<=28 then aV[aY[2]][aV[aY[3]]]=aY[4]elseif aZ==29 then aV[aY[2]]=#aV[aY[445-(416+26)]]else local bO=aY[2]local bP,bQ=aO(aV[bO](aV[bO+3-2]))aQ=bQ+bO-1;local bR=0;for bS=bO,aQ do local bT=0;while true do if bT==0 then bR=bR+1;aV[bS]=bP[bR]break end end end end elseif aZ<=31 then local bU=0;local bV;while true do if bU==0 then bV=aY[2]aV[bV](z(aV,bV+1,aY[3]))break end end elseif aZ==32 then local bW=aY[2]aV[bW]=aV[bW]()else local bX=0;local bY;local bZ;while true do if bX==1 then for b_=bY+1,aQ do t(bZ,aV[b_])end;break end;if 0==bX then bY=aY[2]bZ=aV[bY]bX=1 end end end elseif aZ<=39 then if aZ<=36 then if aZ<=34 then local c0=0;local c1;while true do if 0==c0 then c1=aY[1+1]aV[c1]=aV[c1]()break end end elseif aZ==35 then aV[aY[2]]=aV[aY[3]]%aV[aY[4]]else local c2=aY[2]local c3={aV[c2](aV[c2+1])}local c4=0;for c5=c2,aY[4]do local c6=0;while true do if c6==0 then c4=c4+1;aV[c5]=c3[c4]break end end end end elseif aZ<=65-28 then aG[aY[3]]=aV[aY[2]]elseif aZ==38 then local c7=0;local c8;local c9;local ca;while true do if c7==1 then ca=aV[c8+440-(145+293)]if ca>0 then if c9>aV[c8+1]then aP=aY[3]else aV[c8+433-(44+386)]=c9 end elseif c9<aV[c8+1]then aP=aY[3]else aV[c8+3]=c9 end;break end;if c7==0 then c8=aY[2]c9=aV[c8]c7=1 end end else local cb=0;local cc;local cd;local ce;while true do if cb==1 then ce=aV[cc+2]if ce>0 then if cd>aV[cc+1]then aP=aY[3]else aV[cc+3]=cd end elseif cd<aV[cc+1]then aP=aY[3]else aV[cc+3]=cd end;break end;if cb==0 then cc=aY[2]cd=aV[cc]cb=1 end end end elseif aZ<=42 then if aZ<=40 then local cf=0;local cg;local ch;local ci;local cj;while true do if cf==2 then for ck=cg,aQ do cj=cj+1;aV[ck]=ch[cj]end;break end;if 0==cf then cg=aY[2]ch,ci=aO(aV[cg](z(aV,cg+1,aQ)))cf=1 end;if 1==cf then aQ=ci+cg-1;cj=0;cf=2 end end elseif aZ>41 then do return aV[aY[2]]()end else aV[aY[2]]=aY[3]end elseif aZ<=43 then if aY[1488-(998+488)]==aV[aY[4]]then aP=aP+1 else aP=aY[1+2]end elseif aZ==37+7 then local cl=0;local cm;local cn;while true do if 0==cl then cm=aY[2]cn=aV[aY[3]]cl=1 end;if 1==cl then aV[cm+1]=cn;aV[cm]=cn[aY[4]]break end end else local co=aY[2]local cp=aV[co]for cq=co+1,aQ do t(cp,aV[cq])end end elseif aZ<=68 then if aZ<=56 then if aZ<=822-(201+571)then if aZ<=47 then if aZ>46 then if aV[aY[2]]==aY[4]then aP=aP+1 else aP=aY[3]end else do return end end elseif aZ<=48 then aV[aY[2]]=aY[3]~=0 elseif aZ>49 then aV[aY[2]][aY[3]]=aY[4]else local cr=aY[2]aV[cr](aV[cr+1])end elseif aZ<=53 then if aZ<=51 then aV[aY[2]]=aV[aY[3]]elseif aZ==1190-(116+1022)then aV[aY[2]]=aG[aY[3]]else aV[aY[2]][aV[aY[3]]]=aV[aY[4]]end elseif aZ<=54 then local cs=0;local ct;local cu;local cv;while true do if cs==0 then ct=aY[2]cu={aV[ct](aV[ct+1])}cs=1 end;if cs==1 then cv=0;for cw=ct,aY[4]do local cx=0;while true do if cx==0 then cv=cv+1;aV[cw]=cu[cv]break end end end;break end end elseif aZ==55 then local cy=aY[2]local cz=aV[aY[3]]aV[cy+1]=cz;aV[cy]=cz[aY[4]]else local cA=aY[8-6]local cB={aV[cA](z(aV,cA+1,aQ))}local cC=0;for cD=cA,aY[4]do local cE=0;while true do if cE==0 then cC=cC+1+0;aV[cD]=cB[cC]break end end end end elseif aZ<=226-164 then if aZ<=59 then if aZ<=57 then aV[aY[2]]=aV[aY[3]]%aY[4]elseif aZ>58 then local cF=0;local cG;while true do if cF==0 then cG=aY[2]do return z(aV,cG,aQ)end;break end end else aV[aY[7-5]]={}end elseif aZ<=60 then aV[aY[2]]=aF[aY[3]]elseif aZ==920-(814+45)then local cH=aY[2]aV[cH](z(aV,cH+1,aQ))else local cI=0;local cJ;local cK;local cL;local cM;while true do if cI==2 then for cN=cJ,aQ do local cO=0;while true do if cO==0 then cM=cM+1;aV[cN]=cK[cM]break end end end;break end;if cI==0 then cJ=aY[2]cK,cL=aO(aV[cJ](z(aV,cJ+1,aY[3])))cI=1 end;if 1==cI then aQ=cL+cJ-1;cM=0;cI=2 end end end elseif aZ<=65 then if aZ<=155-92 then if aV[aY[2]]==aV[aY[4]]then aP=aP+1+0 else aP=aY[3]end elseif aZ>64 then aV[aY[1+1]]=aY[3]+aV[aY[4]]else local cP=0;local cQ;while true do if cP==0 then cQ=aY[2]aV[cQ]=aV[cQ](z(aV,cQ+1,aQ))break end end end elseif aZ<=66 then do return end elseif aZ==67 then aG[aY[3]]=aV[aY[2]]else local cR=0;local cS;local cT;local cU;while true do if 2==cR then if cT>0 then if cU<=aV[cS+1]then aP=aY[4-1]aV[cS+3]=cU end elseif cU>=aV[cS+1]then aP=aY[1083-(1020+60)]aV[cS+3]=cU end;break end;if cR==1 then cU=aV[cS]+cT;aV[cS]=cU;cR=2 end;if cR==0 then cS=aY[2]cT=aV[cS+887-(261+624)]cR=1 end end end elseif aZ<=79 then if aZ<=1496-(630+793)then if aZ<=70 then if aZ>69 then aV[aY[2]][aY[3]]=aV[aY[4]]else aV[aY[2]]=aV[aY[3]]+aY[4]end elseif aZ<=71 then local cV=0;local cW;local cX;local cY;local cZ;while true do if cV==2 then for c_=cW,aQ do cZ=cZ+4-3;aV[c_]=cX[cZ]end;break end;if cV==0 then cW=aY[2]cX,cY=aO(aV[cW](z(aV,cW+3-2,aY[3])))cV=1 end;if cV==1 then aQ=cY+cW-1;cZ=0;cV=2 end end elseif aZ==72 then local d0=0;local d1;while true do if d0==0 then d1=aY[1+1]do return aV[d1](z(aV,d1+1,aY[3]))end;break end end else for d2=aY[2],aY[3]do aV[d2]=nil end end elseif aZ<=261-185 then if aZ<=74 then if not aV[aY[2]]then aP=aP+1748-(760+987)else aP=aY[3]end elseif aZ>1988-(1789+124)then local d3=0;local d4;local d5;local d6;while true do if d3==0 then d4=aY[2]d5={aV[d4](z(aV,d4+1,aQ))}d3=1 end;if d3==1 then d6=0;for d7=d4,aY[4]do local d8=0;while true do if 0==d8 then d6=d6+1;aV[d7]=d5[d6]break end end end;break end end else local d9=aY[2]local da,db=aO(aV[d9](aV[d9+1]))aQ=db+d9-1;local dc=0;for dd=d9,aQ do dc=dc+1;aV[dd]=da[dc]end end elseif aZ<=843-(745+21)then local de=aY[2]local df,dg=aO(aV[de](z(aV,de+1,aQ)))aQ=dg+de-1;local dh=0;for di=de,aQ do local dj=0;while true do if dj==0 then dh=dh+1;aV[di]=df[dh]break end end end elseif aZ==78 then if aY[2]==aV[aY[4]]then aP=aP+1 else aP=aY[3]end else local dk=aY[2]local dl=aY[4]local dm=dk+2;local dn={aV[dk](aV[dk+1],aV[dm])}for dp=1,dl do aV[dm+dp]=dn[dp]end;local dq=dn[1]if dq then aV[dm]=dq;aP=aY[3]else aP=aP+1 end end elseif aZ<=30+55 then if aZ<=82 then if aZ<=80 then aP=aY[3]elseif aZ>81 then aV[aY[2]]=aG[aY[3]]else local dr=aY[2]aV[dr]=aV[dr](z(aV,dr+1,aY[3]))end elseif aZ<=83 then if not aV[aY[2]]then aP=aP+1 else aP=aY[3]end elseif aZ==231-147 then aV[aY[2]]=aV[aY[3]][aY[4]]else aV[aY[2]]=aY[3]~=0 end elseif aZ<=88 then if aZ<=86 then aP=aY[11-8]elseif aZ==87 then aV[aY[2]][aY[3]]=aY[4]else aV[aY[2]]=aD(aM[aY[3]],nil,aG)end elseif aZ<=89 then aV[aY[2]]=aY[3]+aV[aY[4]]elseif aZ>1+89 then for ds=aY[2],aY[3]do aV[ds]=nil end else aV[aY[2]]=aD(aM[aY[3+0]],nil,aG)end;aP=aP+1;break end end end end end end end;return aD(aj(),{},D)(...)endv(),...)
